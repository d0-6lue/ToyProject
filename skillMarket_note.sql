INSERT INTO PAYMENT_METHOD (NO, PAYMENT_METHOD_NAME) VALUES ( 1, '신용카드' );
INSERT INTO PAYMENT_METHOD (NO, PAYMENT_METHOD_NAME) VALUES ( 2, '계좌이체' );
INSERT INTO PAYMENT_METHOD (NO, PAYMENT_METHOD_NAME) VALUES ( 3, '휴대폰 결제' );
INSERT INTO PAYMENT_METHOD (NO, PAYMENT_METHOD_NAME) VALUES ( 4, '캐시 결제' );

CREATE TABLE PAYMENT_METHOD (
    NO                      NUMBER          PRIMARY KEY,
    PAYMENT_METHOD_NAME     VARCHAR(30)     NOT NULL
);

CREATE TABLE CASH_CHARGE_LOG (
    NO                      NUMBER          PRIMARY KEY,
    MEMBER_NO               NUMBER          NOT NULL,
    PAYMENT_METHOD_NO       NUMBER          NOT NULL,
    CHARGE_AMOUNT           NUMBER          NOT NULL,
    CHARGE_DATE             TIMESTAMP       DEFAULT SYSDATE
);

CREATE TABLE POINT_LOG (
    NO                      NUMBER          PRIMARY KEY,
    CASH_CHARGE_LOG_NO      NUMBER          NOT NULL,
    POINT_AMOUNT            NUMBER          NOT NULL
);

DROP TABLE USER_CASH CASCADE CONSTRAINTS;
CREATE TABLE USER_CASH (
    MEMBER_NO           NUMBER                  NOT NULL,
    CASH_MONEY          NUMBER      DEFAULT 0   NOT NULL,
    CASH_POINT          NUMBER      DEFAULT 0   NOT NULL
);

SELECT MEMBER_NO, CASH_MONEY, CASH_POINT
FROM USER_CASH
WHERE MEMBER_NO = ?
;

INSERT INTO USER_CASH (MEMBER_NO, CASH_MONEY, CASH_POINT)
VALUES (501, 2500000, 7860)
;

INSERT INTO USER_CASH (MEMBER_NO, CASH_MONEY, CASH_POINT)
VALUES (502, 1500000, 5240)
;

UPDATE USER_CASH 
SET CASH_MONEY = CASH_MONEY - ? , CASH_POINT = CASH_POINT - ?
WHERE MEMBER_NO = ?
;

SELECT * FROM USER_CASH;

select * from user_cash;
commit;
rollback;
SELECT * FROM CASH_CHARGE_LOG;

INSERT INTO CASH_CHARGE_LOG ( NO, MEMBER_NO, PAYMENT_METHOD_NO, CHARGE_AMOUNT, CHARGE_DATE )
VALUES ( SEQ_CASH_CHARGE_NO.NEXTVAL, 501, 1, 100000, DEFAULT)
;


SELECT CASH_MONEY, MEMBER_BANK, MEMBER_ACCOUNT
FROM USER_CASH A
    JOIN MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
WHERE A.MEMBER_NO = 501
;

SELECT * FROM ESTIMATE;

SELECT ESTIMATE_NO, A.FREELANCER_NO, MEMBER_NICK, A.ESTIMATE_CAT_NO, ESTIMATE_CAT_NAME, ESTIMATE_TITLE, ESTIMATE_THUMBNAIL,
ESTIMATE_LINE_INTRODUCTION, ESTIMATE_PRICE, ESTIMATE_PERIOD, ESTIMATE_DETAIL, ESTIMATE_DETAIL_FILE, ESTIMATE_PORTFOLIO, BUSINESS_REGISTRATION_NUMBER,
ESTIMATE_ENROLL_DATE, ESTIMATE_MODIFICATION_DATE, ESTIMATE_STATUS, ESTIMATE_VIEWS
FROM ESTIMATE A
    JOIN (
        SELECT FREELANCER_NO, A.MEMBER_NO, MEMBER_NICK
        FROM FREELANCER A
        JOIN MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
        WHERE FREELANCER_NO = 601
    ) B ON A.FREELANCER_NO = B.FREELANCER_NO
    JOIN ESTIMATE_CAT C ON A.ESTIMATE_CAT_NO = C.ESTIMATE_CAT_NO  
WHERE ESTIMATE_NO = 701
;

SELECT * FROM FREELANCER;

SELECT A.MEMBER_NO, MEMBER_NICK
FROM FREELANCER A
    JOIN MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
WHERE FREELANCER_NO = 601
;